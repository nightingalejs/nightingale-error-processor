{"version":3,"sources":["../../src/index.js"],"names":[],"mappings":";;;;;kBAGwB,c;;AAFxB;;;;;;EAEe,SAAS,cAAT,CAAwB,MAAxB,EAAgC,OAAhC,EAAyC;AACpD,QAAI,CAAC,OAAO,QAAZ,EAAsB;AAClB;AACH;;AAED,WAAO,KAAP,GAAe,OAAO,KAAP,IAAgB,EAA/B;;AAEA,QAAM,QAAQ,OAAO,QAAP,CAAgB,KAAhB,IAAyB,OAAO,QAAP,CAAgB,GAAvD;;AAEA,QAAI,EAAE,iBAAiB,KAAnB,CAAJ,EAA+B;AAC3B;AACH;AACD,WAAO,OAAO,QAAP,CAAgB,KAAvB;AACA,WAAO,OAAO,QAAP,CAAgB,GAAvB;;AAEA,QAAI;AACA,YAAM,cAAc,qBAAW,KAAX,CAApB;AACA,eAAO,QAAP,CAAgB,KAAhB,GAAwB,WAAxB;AACH,KAHD,CAGE,OAAO,GAAP,EAAY;AACV,gBAAQ,GAAR,CAAY,IAAI,KAAJ,IAAa,IAAI,OAAjB,IAA4B,GAAxC;AACA,eAAO,QAAP,CAAgB,KAAhB,GAAwB,KAAxB;AACH;AACJ,C","file":"index.js","sourcesContent":["/* eslint no-console: \"off\" */\nimport { parse as parseError } from 'alouette';\n\nexport default function errorProcessor(record, context) {\n    if (!record.metadata) {\n        return;\n    }\n\n    record.extra = record.extra || {};\n\n    const error = record.metadata.error || record.metadata.err;\n\n    if (!(error instanceof Error)) {\n        return;\n    }\n    delete record.metadata.error;\n    delete record.metadata.err;\n\n    try {\n        const parsedError = parseError(error);\n        record.metadata.error = parsedError;\n    } catch (err) {\n        console.log(err.stack || err.message || err);\n        record.metadata.error = error;\n    }\n}\n"]}